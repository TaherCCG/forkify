{"mappings":"AAAA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,sDAAsD;AACtD,+BAA+B;AAE/B,uCAAuC;AAEvC,MAAM,aAAa;IACjB,IAAI;QACF,oBAAoB;QACpB,MAAM,MAAM,MAAM,MAChB;QAEF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,GAAG,KAAK,OAAO,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;QAE9D,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK,IAAI;QAC1B,SAAS;YACP,IAAI,OAAO,EAAE;YACb,OAAO,OAAO,KAAK;YACnB,WAAW,OAAO,SAAS;YAC3B,WAAW,OAAO,UAAU;YAC5B,OAAO,OAAO,SAAS;YACvB,UAAU,OAAO,QAAQ;YACzB,aAAa,OAAO,YAAY;YAChC,aAAa,OAAO,WAAW;QACjC;QACA,QAAQ,GAAG,CAAC;QAEZ,sBAAsB;QACtB,MAAM,SAAS,CAAC;;kBAEF,EAAE,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC;;gBAEtC,EAAE,OAAO,KAAK,CAAC;;;;;;;;;oEASqC,EACxD,OAAO,WAAW,CACnB;;;;;;;;mEAQwD,EACvD,OAAO,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgCD,EAAE,OAAO,WAAW,CACjB,GAAG,CAAC,CAAA;YACH,OAAO,CAAC;;;;;8CAKwB,EAAE,IAAI,QAAQ,CAAC;;6CAEhB,EAAE,IAAI,IAAI,CAAC;kBACtC,EAAE,IAAI,WAAW,CAAC;;;YAGxB,CAAC;QACD,GACC,IAAI,CAAC,IAAI;;;;;;;yCAOmB,EAC7B,OAAO,SAAS,CACjB;;;;;gBAKK,EAAE,OAAO,SAAS,CAAC;;;;;;;;;IAS/B,CAAC;QACD,gBAAgB,SAAS,GAAG;QAC5B,gBAAgB,kBAAkB,CAAC,cAAc;IACnD,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF;AAEA","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// NEW API URL (instead of the one shown in the video)\n// https://forkify-api.jonas.io\n\n///////////////////////////////////////\n\nconst showRecipe = async function () {\n  try {\n    // 1) Loading recipe\n    const res = await fetch(\n      'https://forkify-api.jonas.io/api/v2/recipes/5ed6604591c37cdc054bc886'\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n    console.log(recipe);\n\n    // 2) Rendering recipe\n    const markup = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\"alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/iconssvg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-datarecipe__info-data--minutes\">${\n            recipe.cookingTime\n          }<span>\n          <spanclass=\"recipe__info-text\">minutes<span>\n        </div>\n\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/iconssvg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-datarecipe__info-data--people\">${\n            recipe.servings\n          }</span>\n          <spanclass=\"recipe__info-text\">servings</span>\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tinybtn--increase-servings\">\n              <svg>\n                <use href=\"src/img/iconssvg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tinybtn--increase-servings\">\n              <svg>\n                <use href=\"src/img/iconssvg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/iconssvg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/iconssvg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipeingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients\n            .map(ing => {\n              return `\n              <li class=\"recipe__ingredient\">\n                <svg class=\"recipe__icon\">\n                  <use href=\"src/img/iconssvg#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__quantity\">${ing.quantity}</div>\n                <div class=\"recipe__description\">\n                  <span class=\"recipe__unit\">${ing.unit}</span>\n                  ${ing.description}\n                </div>\n              </li>\n            `;\n            })\n            .join('')}\n        </ul>\n      </div>\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cookit</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designedand tested by\n          <spanclass=\"recipe__publisher\">${\n            recipe.publisher\n          }</span>. Please checkout\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/iconssvg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}